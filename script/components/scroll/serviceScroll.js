        document.addEventListener('DOMContentLoaded', () => {
            const wrapper = document.getElementById('scroll-wrapper');
            const container = document.getElementById('scroll-container');
            let isDown = false;
            let startX;
            let scrollLeft;

            const mediaQuery = window.matchMedia('(min-width: 768px)');

            function enableDrag(enable) {
                if (enable) {
                    wrapper.classList.add('cursor-grab', 'hide-scrollbar');
                    wrapper.addEventListener('mousedown', startDrag);
                } else {
                    wrapper.classList.remove('cursor-grab', 'cursor-grabbing', 'hide-scrollbar');
                    wrapper.removeEventListener('mousedown', startDrag);
                }
            }

            function startDrag(e) {
                isDown = true;
                wrapper.classList.add('cursor-grabbing');
                wrapper.classList.remove('cursor-grab');
                startX = e.pageX - wrapper.offsetLeft;
                scrollLeft = wrapper.scrollLeft;
                e.preventDefault();
            }

            function moveDrag(e) {
                if (!isDown) return;
                e.preventDefault();
                const x = e.pageX - wrapper.offsetLeft;
                const walk = (x - startX) * 0.8; // üîΩ –ú–µ–¥–ª–µ–Ω–Ω–µ–µ! –ë—ã–ª–æ 1.5 ‚Äî —Å—Ç–∞–ª–æ 0.8
                wrapper.scrollLeft = scrollLeft - walk;
            }

            function stopDrag() {
                isDown = false;
                wrapper.classList.remove('cursor-grabbing');
                wrapper.classList.add('cursor-grab');
            }

            // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ —ç–∫—Ä–∞–Ω–∞
            function updateMode() {
                if (mediaQuery.matches) {
                    // –î–µ—Å–∫—Ç–æ–ø: –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Å–∫—Ä–æ–ª–ª + grab
                    enableDrag(true);
                    wrapper.addEventListener('mousemove', moveDrag);
                    wrapper.addEventListener('mouseup', stopDrag);
                    wrapper.addEventListener('mouseleave', stopDrag);
                } else {
                    // –ú–æ–±–∏–ª–∞: –æ–±—ã—á–Ω—ã–π –ø–æ—Ç–æ–∫
                    enableDrag(false);
                    wrapper.removeEventListener('mousemove', moveDrag);
                    wrapper.removeEventListener('mouseup', stopDrag);
                    wrapper.removeEventListener('mouseleave', stopDrag);
                }
            }

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
            updateMode();
            mediaQuery.addEventListener('change', updateMode);
        });